// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ConsoleApp1.Migrations
{
    [DbContext(typeof(OkulContext))]
    partial class OkulContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ConsoleApp1.Entity.Ders", b =>
                {
                    b.Property<int>("DersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DersId"));

                    b.Property<string>("DersAdi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DersId");

                    b.ToTable("Dersler");
                });

            modelBuilder.Entity("ConsoleApp1.Entity.DersProgrami", b =>
                {
                    b.Property<int>("DersProgramiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DersProgramiId"));

                    b.Property<int>("DersId")
                        .HasColumnType("integer");

                    b.Property<string>("Gun")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Saat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sinif")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DersProgramiId");

                    b.HasIndex("DersId");

                    b.ToTable("DersProgramlari");
                });

            modelBuilder.Entity("ConsoleApp1.Entity.Mudur", b =>
                {
                    b.Property<int>("MudurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MudurId"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MudurId");

                    b.ToTable("Mudurler");
                });

            modelBuilder.Entity("ConsoleApp1.Entity.Not", b =>
                {
                    b.Property<int>("NotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NotId"));

                    b.Property<int>("DersId")
                        .HasColumnType("integer");

                    b.Property<int>("Final")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<int>("Vize")
                        .HasColumnType("integer");

                    b.HasKey("NotId");

                    b.HasIndex("DersId");

                    b.HasIndex("OgrenciId");

                    b.ToTable("Notlar");
                });

            modelBuilder.Entity("ConsoleApp1.Entity.Ogrenci", b =>
                {
                    b.Property<int>("OgrenciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OgrenciId"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OgrenciId");

                    b.ToTable("Ogrenciler");
                });

            modelBuilder.Entity("ConsoleApp1.Entity.OgrenciDersProgrami", b =>
                {
                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<int>("DersProgramiId")
                        .HasColumnType("integer");

                    b.HasKey("OgrenciId", "DersProgramiId");

                    b.HasIndex("DersProgramiId");

                    b.ToTable("OgrenciDersProgrami");
                });

            modelBuilder.Entity("ConsoleApp1.Entity.Ogretmen", b =>
                {
                    b.Property<int>("OgretmenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OgretmenId"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OgretmenId");

                    b.ToTable("Ogretmenler");
                });

            modelBuilder.Entity("DersProgramiOgretmen", b =>
                {
                    b.Property<int>("DersProgramlariDersProgramiId")
                        .HasColumnType("integer");

                    b.Property<int>("OgretmenlerOgretmenId")
                        .HasColumnType("integer");

                    b.HasKey("DersProgramlariDersProgramiId", "OgretmenlerOgretmenId");

                    b.HasIndex("OgretmenlerOgretmenId");

                    b.ToTable("DersProgramiOgretmen");
                });

            modelBuilder.Entity("ConsoleApp1.Entity.DersProgrami", b =>
                {
                    b.HasOne("ConsoleApp1.Entity.Ders", "Ders")
                        .WithMany("DersProgramlari")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");
                });

            modelBuilder.Entity("ConsoleApp1.Entity.Not", b =>
                {
                    b.HasOne("ConsoleApp1.Entity.Ders", "Ders")
                        .WithMany("Notlar")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Entity.Ogrenci", "Ogrenci")
                        .WithMany("Notlar")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("ConsoleApp1.Entity.OgrenciDersProgrami", b =>
                {
                    b.HasOne("ConsoleApp1.Entity.DersProgrami", "DersProgrami")
                        .WithMany("OgrenciDersProgramlari")
                        .HasForeignKey("DersProgramiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Entity.Ogrenci", "Ogrenci")
                        .WithMany("OgrenciDersProgramlari")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DersProgrami");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("DersProgramiOgretmen", b =>
                {
                    b.HasOne("ConsoleApp1.Entity.DersProgrami", null)
                        .WithMany()
                        .HasForeignKey("DersProgramlariDersProgramiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Entity.Ogretmen", null)
                        .WithMany()
                        .HasForeignKey("OgretmenlerOgretmenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleApp1.Entity.Ders", b =>
                {
                    b.Navigation("DersProgramlari");

                    b.Navigation("Notlar");
                });

            modelBuilder.Entity("ConsoleApp1.Entity.DersProgrami", b =>
                {
                    b.Navigation("OgrenciDersProgramlari");
                });

            modelBuilder.Entity("ConsoleApp1.Entity.Ogrenci", b =>
                {
                    b.Navigation("Notlar");

                    b.Navigation("OgrenciDersProgramlari");
                });
#pragma warning restore 612, 618
        }
    }
}
